<!DOCTYPE html>
<html>

<head>
  <link rel='stylesheet' href='/stylesheets/bootstrap.css' />

  <script src="/jquery-1.11.0.min.js"></script>
  <script src="/bootstrap.min.js"></script>

</head>

<body>
  <div class="container">
    <h2>Customer List</h2>
    <div class="row">
      <div class="col-xs-6">
        <table id="productTable" class="table table-bordered table-condensed table-striped">
          <thead>
            <tr>
              <th>ID</th>
              <th>First Name</th>
              <th>Last Name</th>
              <th>Phone Number</th>
              <th>Location</th>
              <th>Edit</th>
              <th>Delete</th>
            </tr>
          </thead>

          <% if(userData.length!=0){ var i=1; userData.forEach(function(data){ %>
            <tr>
              <td>
                <%=data.id; %>
              </td>
              <td>
                <%=data.firstName %>
              </td>
              <td>
                <%=data.lastName %>
              </td>
              <td>
                <%=data.phoneNumber %>
              </td>
              <td>
                <%=data.location %>
              </td>
              <td>
                <button type='button' onclick='customerDisplay(this);' class='btn btn-default' data-id="<%=data.id %>">
                  <span class='glyphicon glyphicon-edit' />
                </button>
              <td><a href="/users/delete/<%=data.id%>">Delete</a></td>
            </tr>
            <% i++; }) %>
              <% } else{ %>
                <tr>
                  <td colspan="7">No Data Found</td>
                </tr>
                <% } %>
        </table>
      </div>
      <div class="col-xs-6">
        <div class="panel panel-primary">

          <form action="/users/create" method="POST">
            <div class="panel-heading">
              Customer Information
            </div>

            <div class="panel-body">
              <div class="form-group">
                <label for="firstName">
                  First Name
                </label>
                <input type="text" class="form-control" placeholder="Enter First Name" name="firstName" required
                  value="<%=(typeof editData!='undefined')? editData.firstName:''%>">
              </div>
              <div class="form-group">
                <label for="lastName">
                  Last Name
                </label>
                <input type="text" class="form-control" placeholder="Enter Last Name" name="lastName" required
                  value="<%=(typeof editData!='undefined')? editData.lastName:''%>">
              </div>
              <div class="form-group">
                <label for="phoneNumber">
                  Phone Number
                </label>
                <input type="tel" class="form-control" placeholder="123-456-7890" name="phoneNumber" required
                  value="<%=(typeof editData!='undefined')? editData.phoneNumber:''%>">
                <!-- pattern="[0-9]{3}-[0-9]{3}-[0-9]{4}" -->
              </div>
              <div class="form-group">
                <label for="location">
                  Location
                </label>
                <input type="text" class="form-control" placeholder="Enter Location" name="location" required
                  value="<%=(typeof editData!='undefined')? editData.location:''%>">
              </div>
            </div>
            <div class="panel-footer">
              <div class="row">
                <div class="col-xs-12">
                  <button type="submit" class="btn btn-primary">
                    Add
                  </button>
                </div>
              </div>
            </div>
          </form>
        </div>

        <div class="panel panel-primary">

          <form action="/users/edit/30>" method="POST">
            <div class="panel-heading">
              Customer Information
            </div>

            <div class="panel-body">
              <div class="form-group">
                <label for="firstName">
                  First Name
                </label>
                <input type="text" class="form-control" placeholder="Enter First Name" name="firstName" id="firstName">
              </div>
              <div class="form-group">
                <label for="lastName">
                  Last Name
                </label>
                <input type="text" class="form-control" placeholder="Enter Last Name" name="lastName" id="lastName">
              </div>
              <div class="form-group">
                <label for="phoneNumber">
                  Phone Number
                </label>
                <input type="tel" class="form-control" placeholder="123-456-7890" name="phoneNumber" id="phoneNumber">
                <!-- pattern="[0-9]{3}-[0-9]{3}-[0-9]{4}"  -->
              </div>
              <div class="form-group">
                <label for="location">
                  Location
                </label>
                <input type="text" class="form-control" placeholder="Enter Location" name="location" id="location">
              </div>
            </div>
            <div class="panel-footer">
              <div class="row">
                <div class="col-xs-12">
                  <button type="submit" class="btn btn-primary">
                    Edit
                  </button>
                </div>
              </div>
            </div>
          </form>

        </div>

      </div>
    </div>
  </div>

  <script>

    $(document).ready(function () {
      customerList();
    });
    // Next id for adding a new Product
    var nextId = 1;
    // ID of Product currently editing
    var activeId = 0;

    function customerDisplay(ctl) {
      editRow = $(ctl).parents("tr");
      var cols = editRow.children("td");

      activeId = parseInt($(cols[0]).text());
      $("#firstName").val($(cols[1]).text().replace(/\s+/g, ' ').trim());
      $("#lastName").val($(cols[2]).text().replace(/\s+/g, ' ').trim());
      $("#phoneNumber").val($(cols[3]).text().replace(/\s+/g, ' ').trim());
      $("#location").val($(cols[4]).text().replace(/\s+/g, ' ').trim());
    }

    function updateClick() {
      // Build product object from inputs
      Product = new Object();
      Product.ProductId = $("#productid").val();
      Product.ProductName = $("#productname").val();
      Product.IntroductionDate = $("#introdate").val();
      Product.Url = $("#url").val();

      if ($("#updateButton").text().trim() == "Add") {
        productAdd(Product);
      }
      else {
        productUpdate(Product);
      }
    }

    function addClick() {
      formClear();
    }

    function productUpdate(product) {
      var url = "/api/Product/" + product.ProductId;

      // Call Web API to update product
      $.ajax({
        url: url,
        type: 'PUT',
        contentType: "application/json;charset=utf-8",
        data: JSON.stringify(product),
        success: function (product) {
          productUpdateSuccess(product);
        },
        error: function (request, message, error) {
          handleException(request, message, error);
        }
      });
    }

    function productUpdateSuccess(product) {
      productUpdateInTable(product);
    }

    function productAdd(product) {
      // Call Web API to add a new product
      $.ajax({
        url: "/api/Product",
        type: 'POST',
        contentType: "application/json;charset=utf-8",
        data: JSON.stringify(product),
        success: function (product) {
          productAddSuccess(product);
        },
        error: function (request, message, error) {
          handleException(request, message, error);
        }
      });
    }

    function productAddSuccess(product) {
      productAddRow(product);
      formClear();
    }

    // Update product in <table>
    function productUpdateInTable(product) {
      // Find Product in <table>
      var row = $("#productTable button[data-id='" + product.ProductId + "']")
        .parents("tr")[0];
      // Add changed product to table
      $(row).after(productBuildTableRow(product));
      // Remove original product
      $(row).remove();

      // Clear form fields
      formClear();

      // Change Update Button Text
      $("#updateButton").text("Add");
    }

    function productGet(ctl) {
      // Get product id from data- attribute
      var id = $(ctl).data("id");

      // Store product id in hidden field
      $("#productid").val(id);

      // Call Web API to get a Product
      $.ajax({
        url: "/api/Product/" + id,
        type: 'GET',
        dataType: 'json',
        success: function (product) {
          productToFields(product);

          // Change Update Button Text
          $("#updateButton").text("Update");
        },
        error: function (request, message, error) {
          handleException(request, message, error);
        }
      });
    }

    function productToFields(product) {
      $("#productname").val(product.ProductName);
      $("#introdate").val(product.IntroductionDate);
      $("#url").val(product.Url);
    }

    // Get all Products to display
    function customerList() {
      // // Call Web API to get a list of Products
      // $.ajax({
      //   url: '/api/Product/',
      //   type: 'GET',
      //   dataType: 'json',
      //   success: function (products) {
      //     customerListSuccess(products);
      //   },
      //   error: function (request, message, error) {
      //     handleException(request, message, error);
      //   }
      // });

      fetch('user/user-list', {
        method: 'get',
        headers: {
          "Content-type": "application/x-www-form-urlencoded; charset=UTF-8"
        },
      })
        .then(json)
        .then(function (data) {
          console.log('Request succeeded with JSON response', data);
        })
        .catch(function (error) {
          console.log('Request failed', error);
        });
    }

    // Display all Products returned from Web API call
    function productListSuccess(products) {
      // Iterate over the collection of data
      $.each(products, function (index, product) {
        // Add a row to the Product table
        productAddRow(product);
      });
    }

    // Add Product row to <table>
    function productAddRow(product) {
      // First check if a <tbody> tag exists, add one if not
      if ($("#productTable tbody").length == 0) {
        $("#productTable").append("<tbody></tbody>");
      }

      // Append row to <table>
      $("#productTable tbody").append(
        productBuildTableRow(product));
    }

    // Build a <tr> for a row of table data
    function productBuildTableRow(product) {
      var ret = "<tr>" +
        "<td>" +
        "<button type='button' " +
        "onclick='productGet(this);' " +
        "class='btn btn-default' " +
        "data-id='" + product.ProductId + "'>" +
        "<span class='glyphicon glyphicon-edit' />" +
        "</button>" +
        "</td>" +
        "<td>" + product.ProductName + "</td>" +
        "<td>" + product.IntroductionDate + "</td>" +
        "<td>" + product.Url + "</td>" +
        "<td>" +
        "<button type='button' " +
        "onclick='productDelete(this);' " +
        "class='btn btn-default' " +
        "data-id='" + product.ProductId + "'>" +
        "<span class='glyphicon glyphicon-remove' />" +
        "</button>" +
        "</td>" +
        "</tr>";

      return ret;
    }

    // Delete product from <table>
    function productDelete(ctl) {
      var id = $(ctl).data("id");

      // Call Web API to delete a product
      $.ajax({
        url: "/api/Product/" + id,
        type: 'DELETE',
        success: function (product) {
          $(ctl).parents("tr").remove();
        },
        error: function (request, message, error) {
          handleException(request, message, error);
        }
      });
    }

    // Clear form fields
    function formClear() {
      $("#productname").val("");
      $("#introdate").val("");
      $("#url").val("");
    }

    // Handle exceptions from AJAX calls
    function handleException(request, message, error) {
      var msg = "";

      msg += "Code: " + request.status + "\n";
      msg += "Text: " + request.statusText + "\n";
      if (request.responseJSON != null) {
        msg += "Message" + request.responseJSON.Message + "\n";
      }

      alert(msg);
    }

  </script>

</body>

</html>